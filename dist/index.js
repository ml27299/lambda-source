module.exports=function(e){var r={};function t(s){if(r[s])return r[s].exports;var o=r[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,s){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(s,o,function(r){return e[r]}.bind(null,o));return s},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=3)}([function(e,r){e.exports=require("source-map-support/register")},function(e,r,t){"use strict";t.r(r);t(0);const s=t(4),o=s.keys();r.default=o.reduce((e,r)=>Object.assign({},e,s(r).default?{[""+r.split("/").pop().replace(".js","")]:s(r).default}:{}),{})},function(e,r){e.exports=require("debug")},function(e,r,t){"use strict";t.r(r),t.d(r,"required",(function(){return n}));t(0);var s=t(1);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const n=e=>function(e){throw e}(new Error("Missing parameter: "+e));r.default=class{constructor(e=n`event`){o(this,"source",void 0),o(this,"event",void 0),this.event=e;for(const r in s.default)if(!1!==s.default.hasOwnProperty(r)&&s.default[r].isService(e)){if(!s.default[r].supported)throw Error(r+" is not supported at this time, write an implementation or ask mac");this.source=s.default[r];break}}getRecords(){return this.source.getRecords(this.event)}respond(...e){return this.source.response(...e)}}},function(e,r,t){var s={"./apiGatewayAuthorizer.js":5,"./apiGatewayAwsProxy.js":6,"./awsConfig.js":7,"./cloudFormation.js":8,"./cloudWatchLogs.js":9,"./cloudfront.js":10,"./codeCommit.js":11,"./cognitoSyncTrigger.js":12,"./dynamoDb.js":13,"./elb.js":14,"./index.js":1,"./kinesis.js":15,"./kinesisFirehose.js":16,"./kinesisFirehoseStream.js":17,"./mobileBackend.js":18,"./s3.js":19,"./scheduledEvent.js":20,"./ses.js":21,"./sns.js":22,"./sqs.js":23};function o(e){var r=n(e);return t(r)}function n(e){if(!t.o(s,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return s[e]}o.keys=function(){return Object.keys(s)},o.resolve=n,e.exports=o,o.id=4},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>"incoming-client-token"===e.authorizationToken,getRecords:e=>e.authorizationToken,supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>!(!e.pathParameters||!e.pathParameters.proxy)||(!(!e.isOffline||!e.headers)||void 0),getRecords:e=>{const r=new Buffer(e.body,"base64").toString();return JSON.parse(r||"[]")},response:(e,r)=>({statusCode:e,body:JSON.stringify(r),headers:{"Content-Type":"application/json; charset=utf-8"}}),supported:!0}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.configRuleId&&e.configRuleName&&e.configRuleArn,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.StackId&&e.RequestType&&e.ResourceType,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.awslogs&&e.awslogs.data,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&e.Records[0].cf,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:codecommit"===e.Records[0].eventSource,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>"SyncTrigger"===e.eventType&&e.identityId&&e.identityPoolId,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:dynamodb"===e.Records[0].eventSource,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);const s=t(2)("lambdasource:sqs");r.default={isService:({requestContext:e}={})=>e&&e.elb,getRecords:e=>{if(s(e),!e)return[];const r=new Buffer(e.body,"base64").toString();return JSON.parse(r||"[]")},response:(e,r)=>({statusCode:e,statusDescription:e+" response",isBase64Encoded:!1,headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),supported:!0}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:kinesis"===e.Records[0].eventSource,getRecords:e=>{if(!e)return[];if(e.Records.length)return[];const r=e.Records.map(e=>e.kinesis.data),t=new Buffer(r,"base64").toString();return JSON.parse(t||"[]")},response:()=>{},supported:!0}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>{if(e.records&&e.records[0].approximateArrivalTimestamp)return!0},getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>{if(e.records&&e.deliveryStreamArn&&e.deliveryStreamArn.startsWith("arn:aws:kinesis:"))return!0},getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.operation&&e.message,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:s3"===e.Records[0].eventSource,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>"aws.events"===e.source,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:ses"===e.Records[0].eventSource,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);r.default={isService:e=>e.Records&&"aws:sns"===e.Records[0].EventSource,getRecords:()=>{},supported:!1}},function(e,r,t){"use strict";t.r(r);t(0);const s=t(2)("lambdasource:sqs");r.default={isService:({Records:e}={})=>e&&"aws:sqs"===e[0].eventSource,getRecords:e=>(s(e),e?0===e.Records.length?[]:e.Records.map(e=>JSON.parse(new Buffer(e.body,"base64").toString())):[]),response:()=>{},supported:!0}}]);